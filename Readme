# Client - (Web-)Server Extended mit einer Datenbank in Node.js

## Allgemein

In diesem Beispiel werden ein Node.js Webserver (mittels Express) gestartet und Zugriffspunkte (Pfäde) definiert. Darüber hinaus wird ein 'mariaDB'-Datenbankcontainer angelegt, welcher vom Webserver verwendet wird.

Der Client und der Server laufen in zwei getrennten Containern, die auch verschiedene `Dockerfile`s benutzen. Das bedeutet, dass der Client-Container nur den Client beinhaltet und der Server nur alle Dateien, die für den Server notwendig sind.

Test User für den Login: 
-Benutzername: Jana -Passwort: 12345
-Benutzername: Katharina -Passwort: 12345
-Benutzername: Tijana -Passwort: 12345

### Datenbank

Die verwendeten Datenbanken sind `MariaDB`-Datenbanken, welche eine OpenSource Weiterentwicklung der `MySQL`-Datenbank ist.

Alles zu den Datenbanken findet man im Ordner `db` und `db2`. Diese(r) wird benötigt, da beim Start der Datenbank das `database.sql` und `database2.sql` Backup geladen und in die Datenbank automatisch eingespielt wird.

Genau genommen nehmen wir das vorhandene offizielle `MariaDB` Container-Image und laden nur unser SQL-Backup rein. Das `database.sql` und `database2.sql` kann man über PhpMyAdmin exportieren und einfach überschreiben.

Die Datenbankinitialisierung findet **nur** statt, wenn der Container das erste Mal gestartet wird, sprich, wenn man das erste Mal `docker-compose up --build` ausführt. Bei jedem weiteren Start mittels `docker-compose up --build` werden die vorhandenen Daten genommen und es wird das Backup `database.sql` **nicht** eingespielt.

Konkret bedeutet das, dass beim ersten Start der Datenbank dies etwas länger dauert, bei jedem weiteren Start geht es deutlich schneller. Wenn man möchte, dass die Datenbank komplett gelöscht wird, dann muss man die Container alle löschen mittels `docker-compose down`. Beim nächsten Start mit `docker-compose up --build` wird dann die Datenbank neu erstellt.

### Server

Der Server benötigt die Datenbank und daher darf der Server erst starten, wenn die Datenbank bereit ist. Der einfachste Workaround hierbei ist ein `sleep`, bevor der Server gestartet wird.

Dies wird in der Dockerfile des Servers bei CMD gemacht. In der Praxis würde man z.B. alle X Sekunden prüfen, ob die Datenbank nun verfügbar ist und dann die Verbindung aufbauen.

Bitte öffne nach dem Start folgende URL: `http://localhost:8080/`

Danach wird man automatisch auf die `index.html` geleitet, die im `static` liegt (Ordner: `public` in `server`).
Mit einem Klick auf den `database.html` Link kommt man auf folgende Seite: `http://localhost:8080/static/database.html`.
Dort befindet sich alles über den Datenbankzugriff, was im Folgenden erklärt wird.

Die `database.html` befindet sich in `./server/public/database.html` und `database2.html` befindet sich in `./server/public/database2.html` und beinhalten den Client (Webbrowser) Code, der im Browser ausgeführt wird.
Dabei werden folgende Zugriffspunkte vom `server.js` verwendet:

Zugriffspunkte:
 * GET http://localhost:8080/database
   * Gibt die komplette `mainList`, `droerieprodukte` und `haustierbedarf` als JSON-Antwort zum Client.
 * DELETE http://localhost:8080/database/`id`
   * Löscht die Reihe aus der `table1` mit der angegebenen `id`.
 * POST http://localhost:8080/database
   * Das übergebene JSON-Objekt an diese URL, welches folgende Struktur haben muss:
   * `{title: "", quantity: "", unit:"", note:""} `
   * wird zur `mainList`, `drogerieprodukte` oder `haustierbedarf` hinzugefügt. Dabei werden die `task_id` sowie die `created_at` automatisch von der Datenbank ausgefüllt (siehe query im Sourcecode).

Zugriffspunkte vom `node-client-server-extended` sind enthalten, aber in dieser Readme beschrieben: [- node-client-server-extended Beispiel ->](../node-client-server-extended/README.md)

Die `database.html` sowie `database2.html` spielt dabei eine wichtige Rolle. In dieser Datei befindet sich `javascript` Code, welcher diese Anfragen stellt und auch in die HTML-Seite integriert (daher bitte die `database.html` anschauen).
Dabei gibt es auch ein Error-Handling, welches über den `alert` angezeigt wird. Jegliche Funktion wie löschen oder hinzufügen führt anschließend wieder das Laden der Datenbank aus, damit der neue Zustand gezeigt wird.

#### Datenbankverbindung

In dem Sourcecode wird die Datenbank automatisch vom `db`-Container beim Start initialisiert. Alternativ kann aber auch wie im `server.js` die Datenbank im Sourcecode angelegt werden (siehe auskommentierter Code am Anfang der Datei).

Bei dem Start von `server.js` wird die Verbindung zur Datenbank erstellt und auch getestet, damit diese später ohne Probleme vom Server verwendet werden kann.

**Hinweis:** Natürlich kann ein ConnectionPool verwendet werden. Dies kann man in der Dokumentation des `mysql`-clients in Node.js nachlesen.

**Hinweis:** In der Praxis muss man jegliche SQL-Query vor dem bekannten Angriff der `SQL-Injection` schützen. Dies sollte in der Vorlesung `IT-Sicherheit` erklärt werden.

### PhpMyAdmin

Im `docker-compose.yaml` wird auch ein `phpMyAdmin`-Container gestartet, der als Hilfestellung zum Erstellen, Testen sowie Debuggen der Datenbank dient. Dieser kann über:

`http://localhost:8085/`

erreicht werden. Hierbei muss man wie im `docker-compose.yaml` den Benutzernamen `MYSQL_USER` sowie das Passwort `MYSQL_PASSWORD` angeben. 

Dies kann auch für den Export verwendet werden mittels `Exportieren` -> `Schnell` -> `SQL`. Die daraus resultierende Datei kann dann in dem Ordner `db` als `database.sql` hinterlegt werden. Bei dem nächsten Neuerstellen des Datenbank-Containers wird diese dann automatisch geladen.

### Static Files

Alle statischen Dateien liegen wie bereits beschrieben in dem Ordner `public`, welcher über `/static/` per Webserver erreichbar ist. Am besten verwendet man relative Pfade zu den Dateien, so wie in der Datei `static.html`. Diese Datei befindet sich in `./server/public/static.html`.

In diesem Beispiel ist beschrieben, wie man Bilder und eigene CSS-Dateien referenzieren kann. Darüber hinaus können auch Javascript-Dateien so richtig ausgegliedert werden. Idealerweise überlegt man sich eine sinnvolle Ordnerstruktur, um dies auch gut warten zu können.

### Client

Der Client ist im Webbrowser, welcher die REST-Calls testet.

## Installation und lokale Ausführung

**Hinweis:** Beachte, dass die `docker-compose.yml` im Hauptverzeichnis des Projektes liegt. Die Ordnerstruktur enthält einen Ordner `client` und einen Ordner `server`, welche jeweils die benötigten Dateien sowie eine eigene `Dockerfile` haben, welche die Container beschreiben. Die Container sind unabhängig und unterscheiden sich. Innerhalb der `docker-compose.yml` wird unter `build` der Ordner angegeben, welcher die `Dockerfile` beinhaltet.

In den Verzeichnissen `server` können mittels:
```sh
npm install
```
alle definierten Bibliotheken im `package.js` heruntergeladen werden.

Alle zusätzlichen npm install Befehle:
"bcrypt": "^5.0.1",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "crypto": "^1.0.1",
    "express": "^4.17.3",
    "express-session": "^1.17.2",
    "jsonwebtoken": "^8.5.1",
    "mysql": "^2.18.1",
    "nodemailer": "^6.7.3",
    "uuid": "^8.3.2"


Mit folgenden Befehlen können der Server und Client lokal ausgeführt werden:

```sh
# start des servers -> im "server"-Ordner
node server.js
```

**Wichtig:** Die lokale Ausführung funktioniert nur, wenn alle notwendigen `Environmentvariablen` sowie die Datenbank erreichbar sind! Daher wird die Ausführung mittels `docker-compose` bei diesem Beispiel empfohlen!

## Ausführung mit Docker und docker-compose

In diesem Ordner können mit dem Terminal und folgendem Befehl:

```sh
# start mit
docker-compose up --build
```

automatisch der "Server"-Container und der "Client"-Container gestartet werden.
Darüber hinaus werden die beiden Container `server` und `client` mittels dem `--build` flag auch neu gebaut, damit aktuelle Änderungen enthalten sind.

Der Output sieht wie folgt aus:

Recreating einkaufsliste_host2_1 ... 
Recreating einkaufsliste_host1_1 ... 
Recreating einkaufsliste_host2_1 ... done
Recreating einkaufsliste_host1_1 ... done
Recreating einkaufsliste_server2_1 ... done
Recreating einkaufsliste_server1_1 ... done
Recreating einkaufsliste_balancer_1 ... done
Attaching to einkaufsliste_phpmyadmin2_1, einkaufsliste_phpmyadmin_1, einkaufsliste_host2_1, einkaufsliste_host1_1, einkaufsliste_server2_1, einkaufsliste_server1_1, einkaufsliste_balancer_1
balancer_1     | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
balancer_1     | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
host1_1        | 2022-05-03 10:59:09+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:10.7.3+maria~focal started.
balancer_1     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
balancer_1     | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
balancer_1     | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
host1_1        | 2022-05-03 10:59:09+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
balancer_1     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
balancer_1     | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
host2_1        | 2022-05-03 10:59:09+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:10.7.3+maria~focal started.
balancer_1     | /docker-entrypoint.sh: Configuration complete; ready for start up
host1_1        | 2022-05-03 10:59:09+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:10.7.3+maria~focal started.
host1_1        | 2022-05-03 10:59:09+00:00 [Note] [Entrypoint]: Initializing database files
host1_1        | 2022-05-03 10:59:10 0 [Warning] You need to use --log-bin to make --expire-logs-days or --binlog-expire-logs-seconds work.
host2_1        | 2022-05-03 10:59:09+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
host2_1        | 2022-05-03 10:59:09+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:10.7.3+maria~focal started.
host2_1        | 2022-05-03 10:59:09+00:00 [Note] [Entrypoint]: Initializing database files
host2_1        | 2022-05-03 10:59:10 0 [Warning] You need to use --log-bin to make --expire-logs-days or --binlog-expire-logs-seconds work.
host1_1        |
host1_1        |
host1_1        | PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER !
host1_1        | To do so, start the server, then issue the following command:
host1_1        |
host1_1        | '/usr/bin/mysql_secure_installation'
host1_1        |
host1_1        | which will also give you the option of removing the test
host1_1        | databases and anonymous user created by default.  This is
host1_1        | strongly recommended for production servers.
host1_1        |
host1_1        | See the MariaDB Knowledgebase at https://mariadb.com/kb
host1_1        |
host1_1        | Please report any problems at https://mariadb.org/jira
host1_1        | 
host1_1        | The latest information about MariaDB is available at https://mariadb.org/.
host1_1        |
host1_1        | Consider joining MariaDB's strong and vibrant community:
host1_1        | https://mariadb.org/get-involved/
host1_1        |
host1_1        | 2022-05-03 10:59:13+00:00 [Note] [Entrypoint]: Database files initialized
host2_1        |
host2_1        |
host2_1        | PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER !
host2_1        | To do so, start the server, then issue the following command:
host2_1        |
host2_1        | '/usr/bin/mysql_secure_installation'
host2_1        |
host2_1        | which will also give you the option of removing the test
host2_1        | databases and anonymous user created by default.  This is
host2_1        | strongly recommended for production servers.
host2_1        |
host2_1        | See the MariaDB Knowledgebase at https://mariadb.com/kb
host2_1        |
host2_1        | Please report any problems at https://mariadb.org/jira
host2_1        |
host2_1        | The latest information about MariaDB is available at https://mariadb.org/.
host2_1        |
host2_1        | Consider joining MariaDB's strong and vibrant community:
host2_1        | https://mariadb.org/get-involved/
host2_1        |
host1_1        | 2022-05-03 10:59:13+00:00 [Note] [Entrypoint]: Starting temporary server
host2_1        | 2022-05-03 10:59:13+00:00 [Note] [Entrypoint]: Database files initialized
host2_1        | 2022-05-03 10:59:13+00:00 [Note] [Entrypoint]: Starting temporary server
host1_1        | 2022-05-03 10:59:13+00:00 [Note] [Entrypoint]: Waiting for server startup
host1_1        | 2022-05-03 10:59:13 0 [Note] mariadbd (server 10.7.3-MariaDB-1:10.7.3+maria~focal) starting as process 107 ...
host1_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Compressed tables use zlib 1.2.11
host2_1        | 2022-05-03 10:59:13+00:00 [Note] [Entrypoint]: Waiting for server startup
host1_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Number of transaction pools: 1
host1_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Using crc32 + pclmulqdq instructions
host1_1        | 2022-05-03 10:59:13 0 [Note] mariadbd: O_TMPFILE is not supported on /tmp (disabling future attempts)
host2_1        | 2022-05-03 10:59:13 0 [Note] mariadbd (server 10.7.3-MariaDB-1:10.7.3+maria~focal) starting as process 108 ...
host1_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Using Linux native AIO
host2_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Compressed tables use zlib 1.2.11
host2_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Number of transaction pools: 1
host2_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Using crc32 + pclmulqdq instructions
host2_1        | 2022-05-03 10:59:13 0 [Note] mariadbd: O_TMPFILE is not supported on /tmp (disabling future attempts)
host1_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Initializing buffer pool, total size = 134217728, chunk size = 134217728
host1_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Completed initialization of buffer pool
host1_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: 128 rollback segments are active.
host1_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Creating shared tablespace for temporary tables
host1_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Setting file './ibtmp1' size to 12 MB. Physically writing the file full; Please wait ...      
host1_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: File './ibtmp1' size is now 12 MB.
host1_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: 10.7.3 started; log sequence number 42289; transaction id 14
host1_1        | 2022-05-03 10:59:13 0 [Note] Plugin 'FEEDBACK' is disabled.
host2_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Using Linux native AIO
host1_1        | 2022-05-03 10:59:13 0 [Warning] You need to use --log-bin to make --expire-logs-days or --binlog-expire-logs-seconds work.
host1_1        | 2022-05-03 10:59:13 0 [Warning] 'user' entry 'root@3890c4a47a92' ignored in --skip-name-resolve mode.
host1_1        | 2022-05-03 10:59:13 0 [Warning] 'proxies_priv' entry '@% root@3890c4a47a92' ignored in --skip-name-resolve mode.
host1_1        | 2022-05-03 10:59:14 0 [Note] mariadbd: ready for connections.
host1_1        | Version: '10.7.3-MariaDB-1:10.7.3+maria~focal'  socket: '/run/mysqld/mysqld.sock'  port: 0  mariadb.org binary distribution        
host1_1        | 2022-05-03 10:59:14+00:00 [Note] [Entrypoint]: Temporary server started.
host1_1        | Warning: Unable to load '/usr/share/zoneinfo/leap-seconds.list' as time zone. Skipping it.
host1_1        | Warning: Unable to load '/usr/share/zoneinfo/leapseconds' as time zone. Skipping it.
host1_1        | Warning: Unable to load '/usr/share/zoneinfo/tzdata.zi' as time zone. Skipping it.
host1_1        | 2022-05-03 10:59:16+00:00 [Note] [Entrypoint]: GENERATED ROOT PASSWORD: ~r{/99G?_}JLW|RERMMQImFOwG<?imcX
host2_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Initializing buffer pool, total size = 134217728, chunk size = 134217728
host2_1        | 2022-05-03 10:59:13 0 [Note] InnoDB: Completed initialization of buffer pool
host2_1        | 2022-05-03 10:59:14 0 [Note] InnoDB: 128 rollback segments are active.
host2_1        | 2022-05-03 10:59:14 0 [Note] InnoDB: Creating shared tablespace for temporary tables
host2_1        | 2022-05-03 10:59:14 0 [Note] InnoDB: Setting file './ibtmp1' size to 12 MB. Physically writing the file full; Please wait ...      
host2_1        | 2022-05-03 10:59:14 0 [Note] InnoDB: File './ibtmp1' size is now 12 MB.
host2_1        | 2022-05-03 10:59:14 0 [Note] InnoDB: 10.7.3 started; log sequence number 42173; transaction id 14
host2_1        | 2022-05-03 10:59:14 0 [Note] Plugin 'FEEDBACK' is disabled.
host1_1        | 2022-05-03 10:59:16+00:00 [Note] [Entrypoint]: Securing system users (equivalent to running mysql_secure_installation)
host2_1        | 2022-05-03 10:59:14 0 [Warning] You need to use --log-bin to make --expire-logs-days or --binlog-expire-logs-seconds work.
host1_1        | 2022-05-03 10:59:16+00:00 [Note] [Entrypoint]: Creating database EinkaufslisteDB
host2_1        | 2022-05-03 10:59:14 0 [Warning] 'user' entry 'root@13fe9881125c' ignored in --skip-name-resolve mode.
host2_1        | 2022-05-03 10:59:14 0 [Warning] 'proxies_priv' entry '@% root@13fe9881125c' ignored in --skip-name-resolve mode.
host1_1        | 2022-05-03 10:59:17+00:00 [Note] [Entrypoint]: Creating user user1
host2_1        | 2022-05-03 10:59:14 0 [Note] mariadbd: ready for connections.
host2_1        | Version: '10.7.3-MariaDB-1:10.7.3+maria~focal'  socket: '/run/mysqld/mysqld.sock'  port: 0  mariadb.org binary distribution        
host1_1        | 2022-05-03 10:59:17+00:00 [Note] [Entrypoint]: Giving user user1 access to schema EinkaufslisteDB
host2_1        | 2022-05-03 10:59:14+00:00 [Note] [Entrypoint]: Temporary server started.
host2_1        | Warning: Unable to load '/usr/share/zoneinfo/leap-seconds.list' as time zone. Skipping it.
host2_1        | Warning: Unable to load '/usr/share/zoneinfo/leapseconds' as time zone. Skipping it.
host1_1        |
host1_1        | 2022-05-03 10:59:17+00:00 [Note] [Entrypoint]: /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/database.sql
host1_1        |
host1_1        |
host2_1        | Warning: Unable to load '/usr/share/zoneinfo/tzdata.zi' as time zone. Skipping it.
host2_1        | 2022-05-03 10:59:16+00:00 [Note] [Entrypoint]: GENERATED ROOT PASSWORD: 9@wR6}Em/XTf[3BMn@[&y6m{-~f~pg*&
host2_1        | 2022-05-03 10:59:16+00:00 [Note] [Entrypoint]: Securing system users (equivalent to running mysql_secure_installation)
host2_1        | 2022-05-03 10:59:17+00:00 [Note] [Entrypoint]: Creating database LoginDB
host2_1        | 2022-05-03 10:59:17+00:00 [Note] [Entrypoint]: Creating user user2
host2_1        | 2022-05-03 10:59:17+00:00 [Note] [Entrypoint]: Giving user user2 access to schema LoginDB
host2_1        |
host1_1        | 2022-05-03 10:59:17+00:00 [Note] [Entrypoint]: Stopping temporary server
host1_1        | 2022-05-03 10:59:17 0 [Note] mariadbd (initiated by: root[root] @ localhost []): Normal shutdown
host1_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: FTS optimize thread exiting.
host1_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: Starting shutdown...
host1_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: Dumping buffer pool(s) to /var/lib/mysql/ib_buffer_pool
host2_1        | 2022-05-03 10:59:17+00:00 [Note] [Entrypoint]: /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/database2.sql
host2_1        |
host2_1        |
host1_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: Buffer pool(s) dump completed at 220503 10:59:17
host1_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: Removed temporary tablespace data file: "./ibtmp1"
host1_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: Shutdown completed; log sequence number 85386; transaction id 100
host2_1        | 2022-05-03 10:59:17+00:00 [Note] [Entrypoint]: Stopping temporary server
host1_1        | 2022-05-03 10:59:17 0 [Note] mariadbd: Shutdown complete
host1_1        |
host2_1        | 2022-05-03 10:59:17 0 [Note] mariadbd (initiated by: root[root] @ localhost []): Normal shutdown
host1_1        | 2022-05-03 10:59:18+00:00 [Note] [Entrypoint]: Temporary server stopped
host1_1        |
host2_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: FTS optimize thread exiting.
host2_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: Starting shutdown...
host2_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: Dumping buffer pool(s) to /var/lib/mysql/ib_buffer_pool
host1_1        | 2022-05-03 10:59:18+00:00 [Note] [Entrypoint]: MariaDB init process done. Ready for start up.
host1_1        |
host1_1        | 2022-05-03 10:59:18 0 [Note] mariadbd (server 10.7.3-MariaDB-1:10.7.3+maria~focal) starting as process 1 ...
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Compressed tables use zlib 1.2.11
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Number of transaction pools: 1
host2_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: Buffer pool(s) dump completed at 220503 10:59:17
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Using crc32 + pclmulqdq instructions
host1_1        | 2022-05-03 10:59:18 0 [Note] mariadbd: O_TMPFILE is not supported on /tmp (disabling future attempts)
host2_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: Removed temporary tablespace data file: "./ibtmp1"
host2_1        | 2022-05-03 10:59:17 0 [Note] InnoDB: Shutdown completed; log sequence number 51580; transaction id 31
phpmyadmin2_1  | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.4. Set the 'ServerName' directive globally to suppress this message
phpmyadmin2_1  | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.4. Set the 'ServerName' directive globally to suppress this message
phpmyadmin2_1  | [Wed Apr 13 08:27:56.939980 2022] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.52 (Debian) PHP/8.0.15 configured -- resuming normal operations
phpmyadmin2_1  | [Wed Apr 13 08:27:56.940054 2022] [core:notice] [pid 1] AH00094: Command line: 'apache2 -D FOREGROUND'
phpmyadmin2_1  | 172.22.0.1 - - [13/Apr/2022:10:12:29 +0000] "GET /index.php?route=/&route=%2F&db=LoginDB&table=user HTTP/1.1" 200 6367 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36 Edg/100.0.1185.36"
phpmyadmin2_1  | 172.22.0.1 - - [13/Apr/2022:10:12:30 +0000] "GET /js/messages.php?l=de&v=5.1.3 HTTP/1.1" 200 9640 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36 Edg/100.0.1185.36"
phpmyadmin2_1  | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.4. Set the 'ServerName' directive globally to suppress this message
phpmyadmin2_1  | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.4. Set the 'ServerName' directive globally to suppress this message
phpmyadmin2_1  | [Wed Apr 13 23:21:59.154520 2022] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.52 (Debian) PHP/8.0.15 configured -- resuming normal operations
phpmyadmin2_1  | [Wed Apr 13 23:21:59.154588 2022] [core:notice] [pid 1] AH00094: Command line: 'apache2 -D FOREGROUND'
phpmyadmin2_1  | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.7. Set the 'ServerName' directive globally to suppress this message
phpmyadmin2_1  | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.7. Set the 'ServerName' directive globally to suppress this message
phpmyadmin2_1  | [Sun Apr 17 10:29:37.509170 2022] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.52 (Debian) PHP/8.0.15 configured -- resuming normal operations
phpmyadmin2_1  | [Sun Apr 17 10:29:37.509230 2022] [core:notice] [pid 1] AH00094: Command line: 'apache2 -D FOREGROUND'
phpmyadmin2_1  | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.2. Set the 'ServerName' directive globally to suppress this message
phpmyadmin2_1  | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.2. Set the 'ServerName' directive globally to suppress this message
phpmyadmin2_1  | [Tue Apr 26 17:16:38.140889 2022] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.52 (Debian) PHP/8.0.15 configured -- resuming normal operations
phpmyadmin2_1  | [Tue Apr 26 17:16:38.140939 2022] [core:notice] [pid 1] AH00094: Command line: 'apache2 -D FOREGROUND'
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Using Linux native AIO
host2_1        | 2022-05-03 10:59:17 0 [Note] mariadbd: Shutdown complete
host2_1        |
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Initializing buffer pool, total size = 134217728, chunk size = 134217728
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Completed initialization of buffer pool
host2_1        | 2022-05-03 10:59:18+00:00 [Note] [Entrypoint]: Temporary server stopped
host2_1        |
host2_1        | 2022-05-03 10:59:18+00:00 [Note] [Entrypoint]: MariaDB init process done. Ready for start up.
host2_1        |
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: 128 rollback segments are active.
host2_1        | 2022-05-03 10:59:18 0 [Note] mariadbd (server 10.7.3-MariaDB-1:10.7.3+maria~focal) starting as process 1 ...
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Compressed tables use zlib 1.2.11
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Number of transaction pools: 1
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Using crc32 + pclmulqdq instructions
host2_1        | 2022-05-03 10:59:18 0 [Note] mariadbd: O_TMPFILE is not supported on /tmp (disabling future attempts)
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Using Linux native AIO
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Initializing buffer pool, total size = 134217728, chunk size = 134217728
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Creating shared tablespace for temporary tables
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Setting file './ibtmp1' size to 12 MB. Physically writing the file full; Please wait ...      
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: File './ibtmp1' size is now 12 MB.
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: 10.7.3 started; log sequence number 85386; transaction id 101
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool
host1_1        | 2022-05-03 10:59:18 0 [Note] Plugin 'FEEDBACK' is disabled.
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Completed initialization of buffer pool
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: 128 rollback segments are active.
host1_1        | 2022-05-03 10:59:18 0 [Warning] You need to use --log-bin to make --expire-logs-days or --binlog-expire-logs-seconds work.
host1_1        | 2022-05-03 10:59:18 0 [Note] Server socket created on IP: '0.0.0.0'.
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Creating shared tablespace for temporary tables
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Setting file './ibtmp1' size to 12 MB. Physically writing the file full; Please wait ...      
host1_1        | 2022-05-03 10:59:18 0 [Note] Server socket created on IP: '::'.
host1_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Buffer pool(s) load completed at 220503 10:59:18
host1_1        | 2022-05-03 10:59:18 0 [Note] mariadbd: ready for connections.
host1_1        | Version: '10.7.3-MariaDB-1:10.7.3+maria~focal'  socket: '/run/mysqld/mysqld.sock'  port: 3306  mariadb.org binary distribution     
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: File './ibtmp1' size is now 12 MB.
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: 10.7.3 started; log sequence number 51580; transaction id 32
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool
host2_1        | 2022-05-03 10:59:18 0 [Note] Plugin 'FEEDBACK' is disabled.
host2_1        | 2022-05-03 10:59:18 0 [Warning] You need to use --log-bin to make --expire-logs-days or --binlog-expire-logs-seconds work.
host2_1        | 2022-05-03 10:59:18 0 [Note] InnoDB: Buffer pool(s) load completed at 220503 10:59:18
phpmyadmin_1   | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.3. Set the 'ServerName' directive globally to suppress this message
phpmyadmin_1   | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.3. Set the 'ServerName' directive globally to suppress this message
phpmyadmin_1   | [Wed Apr 13 08:27:56.781119 2022] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.52 (Debian) PHP/8.0.15 configured -- resuming normal operations
phpmyadmin_1   | [Wed Apr 13 08:27:56.781187 2022] [core:notice] [pid 1] AH00094: Command line: 'apache2 -D FOREGROUND'
phpmyadmin_1   | 172.22.0.1 - - [13/Apr/2022:10:15:10 +0000] "GET /index.php?route=/&route=%2F HTTP/1.1" 200 6341 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36 Edg/100.0.1185.36"
phpmyadmin_1   | 172.22.0.1 - - [13/Apr/2022:10:15:10 +0000] "GET /js/messages.php?l=de&v=5.1.3 HTTP/1.1" 200 9640 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36 Edg/100.0.1185.36"
phpmyadmin_1   | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.5. Set the 'ServerName' directive globally to suppress this message
phpmyadmin_1   | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.5. Set the 'ServerName' directive globally to suppress this message
phpmyadmin_1   | [Wed Apr 13 23:21:59.154578 2022] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.52 (Debian) PHP/8.0.15 configured -- resuming normal operations
phpmyadmin_1   | [Wed Apr 13 23:21:59.154637 2022] [core:notice] [pid 1] AH00094: Command line: 'apache2 -D FOREGROUND'
phpmyadmin_1   | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.8. Set the 'ServerName' directive globally to suppress this message
phpmyadmin_1   | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.8. Set the 'ServerName' directive globally to suppress this message
phpmyadmin_1   | [Sun Apr 17 10:29:37.509043 2022] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.52 (Debian) PHP/8.0.15 configured -- resuming normal operations
phpmyadmin_1   | [Sun Apr 17 10:29:37.509110 2022] [core:notice] [pid 1] AH00094: Command line: 'apache2 -D FOREGROUND'
phpmyadmin_1   | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.5. Set the 'ServerName' directive globally to suppress this message
phpmyadmin_1   | AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 172.22.0.5. Set the 'ServerName' directive globally to suppress this message
phpmyadmin_1   | [Tue Apr 26 17:16:39.080787 2022] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.52 (Debian) PHP/8.0.15 configured -- resuming normal operations
phpmyadmin_1   | [Tue Apr 26 17:16:39.080856 2022] [core:notice] [pid 1] AH00094: Command line: 'apache2 -D FOREGROUND'
host2_1        | 2022-05-03 10:59:18 0 [Note] Server socket created on IP: '0.0.0.0'.
host2_1        | 2022-05-03 10:59:18 0 [Note] Server socket created on IP: '::'.
host2_1        | 2022-05-03 10:59:18 0 [Note] mariadbd: ready for connections.
host2_1        | Version: '10.7.3-MariaDB-1:10.7.3+maria~focal'  socket: '/run/mysqld/mysqld.sock'  port: 3306  mariadb.org binary distribution     
server1_1      | Conecting to EinkaufslisteDB...
server2_1      | Conecting to EinkaufslisteDB...
server1_1      | Conecting to LoginDB...
server2_1      | Conecting to LoginDB...
server1_1      | Running on http://0.0.0.0:8080
server2_1      | Running on http://0.0.0.0:8080
server1_1      | Database EinkaufslisteDB connected and works
server1_1      | Database LoginDB connected and works
server2_1      | Database EinkaufslisteDB connected and works
server2_1      | Database LoginDB connected and works

Um alle Container zu stoppen, können diese mittels [strg] + [c] beendet werden.

**Hinweis:** Sollte der Container nicht herunterfahren, dann kann [strg] + [c] nochmals gedrückt werden, um dies zu beschleunigen.

Der Output sieht wie folgt aus:
```sh
Gracefully stopping... (press Ctrl+C again to force)
Stopping einkaufsliste_balancer_1    ... done
Stopping einkaufsliste_server2_1     ... 
Stopping einkaufsliste_server1_1     ... 
Stopping einkaufsliste_host1_1       ... 
Stopping einkaufsliste_host2_1       ... 
Stopping einkaufsliste_phpmyadmin2_1 ... 
Stopping einkaufsliste_phpmyadmin_1  ... 
# wenn nochmal [strg] + [c] gedrückt wird:
Killing einkaufsliste_server2_1      ... done
Killing einkaufsliste_server1_1      ... done
Killing einkaufsliste_host1_1        ... done
Killing einkaufsliste_host2_1        ... done
Killing einkaufsliste_phpmyadmin_1   ... done
```

**Wichtig:** Der Parameter `--build` sorgt dafür, dass bei jedem Aufruf von `docker-compose up` alle Container neu gebaut werden, damit alle Änderungen im `server.js` sowie im Datenbankschema `database.sql` in den jeweiligen Container integriert werden.


## Informationen

 * Express
   * NPM: https://www.npmjs.com/package/express
   * Dokumentation: https://expressjs.com/en/4x/api.html
   * Routing: https://expressjs.com/en/guide/routing.html
   * Getting Started: https://expressjs.com/en/starter/installing.html
 * MariaDB
   * Dockerhub: https://hub.docker.com/_/mariadb/
   * Homepage: https://mariadb.org/
   * Dokumentation: https://mariadb.org/documentation/
 * MySQL-Client
   * NPM: https://www.npmjs.com/package/mysql
   * Repository: https://github.com/mysqljs/mysql
 * Bootstrap (CSS für Table, usw.)
   * Homepage: https://getbootstrap.com/
   * Alerts: https://getbootstrap.com/docs/4.3/components/alerts/
   * Tabelle: https://getbootstrap.com/docs/4.0/content/tables/
   * Buttons: https://getbootstrap.com/docs/4.3/components/buttons/
 * W3Schools:
   * Button onclick Event: https://www.w3schools.com/jsref/event_onclick.asp
   * JSON HTML Table: https://www.w3schools.com/js/js_json_html.asp
   * AJAX: https://www.w3schools.com/xml/ajax_intro.asp
   * Node.js mysql: https://www.w3schools.com/nodejs/nodejs_mysql_where.asp
   * JSON: https://www.w3schools.com/js/js_json.asp
